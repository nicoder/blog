20130901sun
    21h32 "Something new for thirty days". I enjoyed that TED talk by Matt Cuts, and heard Ben Orenstein on the Giant Robots podcast this morning saying that if you're looking for a (better) job you should write a blog post every day.
    21h35 I am not looking for a (better) job at the moment, but I always figured I'd like to write a blog.
    21h37 My current career goal is as follows : I'd like to learn how to program well and then start teaching what I've learned.
    21h37 I may as well try and start sharing what I have learned, so I'll try to write a small post each day in September.
    22h20 wrote my `g;` post, next let's publish that in a new repo on github
    22h47 it's up! https://github.com/nicoder/blog/blob/master/2013/09/01/g_semicolon.md

0902mon
    21h43 Second day, some vim commands again : Ctrl-n and Ctrl-p
    22h16 let's read it one more time and commit/push
    22h31 git push origin master

0903tue
    21h14 third day, another vim command : Ctrl-D
    21h22 fun, i spend more time reading the help file than writing my daily post.

0904wed
    21h39 fourth day, J

0905thu
    21h24 fifth day
    21h25 gt (tabs in vim)
    21h29 I wonder if any one other then me will ever get something out of these blog posts

0906fri
    21h52 sixth post, not a vim command for once!
    21h52 still linked to vim in a way, and a more general lesson : when
    21h53 something annoys you, try and find a way to understand / work around
    it / make it disappear

0907sat
    21h32 seventh post: touch typing

0908sun
    21h21 eight post: Ctrl-V

0909mon
    21h20 ninth post: vim macros

0910tue
    21h16 tenth post: q/
    21h51 done.

0911wed
    21h28 eleventh post: cw (along with /, n and .)
    21h49 i'm using http://dillinger.io/ to preview the markdown before commiting

0912thu
    21h03 twelth post: == (indenting in vim)
    21h49 lots of cool stuff in motion.txt

0913fri
    17h59 thirteenth post : %

0914sat
    20h40 fourteenth post: f and t

0915sun
    G and gg

0916mon
    u and Ctrl-R

0917tue
    18h07 :g/MY SEARCH STRING to show only those lines. e.g. :g/function => function definitions in php file

0918wed
    22h12 C (e.g changing elseif into else, or see that the last 3 words of the line should be changed => 3bC)

0919thu
    22h20 zz, zt and zb

0920fri
    23h10 :only to keep just one window open when split

0921sat
    22h14 :sort

0922sun
    22h29 :tabedit %:h/ + Tab

0923mon
    21h49 Ctrl-A et Ctrl-x, with count (e.g. to add 8 to three numbers)

0924tue (or rather 0925wed)
    04h49 I, A (for example comment a couple of lines : I//<Esc>j.j.j.j.

0925wed
    22h26 the dot command.

0926thu
    23h09 split windows : vs, Ctrl-W W, sp, Ctrl-W j k l, :q
    23h56 installed CtrlP! will try it out, will probably be an improvement

0927fri
    22h37 { and } to move
    05h58 oops, fell asleep.

0928sat
    20h17 gv to get the same visual selection (example, Ctrl-v to move a set of lines to the right, than gv and 10j to get 10 more lines and move once more)

0929sun
    17h56 * to go to the next occurrence of the word, # to go to the previous (notice the word delimiters in the search when do /<Up> or q/)
    18h15 cool, used fugitive to commit this. Used :Gstatus, :GCommit, :Git push

0930mon
    20h25 case insensitive search with \c
    21h00 it's been nice writing something each day (more or less) for thirty days.
    21h00 i installed ctrlp and enjoy it at work, re-learnt how to do case insensitive search in vim (hopefully it will stick), 
    21h01 learnt `<Ctrl-W>o` is faster than :only
    21h02 and in general got to read the vim help a lot more.
    21h02 oh and started using fugitive :) really like :Gstatus for the moment.

1101fri
    22h42 let's do some more.
    22h42 :windo diffthis

20140315sat
    08h57 in wroclaw, about to go to day 2 (or day 1) of the wroc_love.rb conference
    09h11 wrote a piece about yesterday, let's go to today's venue

20140612thu
    03h32 wrote a review of the (paid) video course "Building an Application with CoffeeScript" by Darko Bozhinovski

20140901mon
    17h00 let's look at what i wrote about wroclaw.rb back in march and push that maybe.
    17h05 mmm, should have done that sooner, too bad. will push that as is.
    17h08 should generate a static site with jekyll or octopress, with comments by discuss. to learn how that works. and maybe help someone. and maybe motivate myself to write more/better.
    17h22 wrote about mkdir -p

0902tue
    17h58 a small one about ctrl-Z and fg to get out of vim and then back in again.
    18h26 done. learnt some stuff about `jobs` and `bg` and `&`, cool!

0903wed
    20h52 a small one about Ctrl-R + " in the vim command line
    21h16 done.

0904thu
    18h32 a small one (as always) about indenting in vim insert mode
    19h01 done.

0905fri
    17h53 just have time for a real short one.  Ctrl-W to erase last word in the command line
    18h06 done.

0906sat
    18h54 let's see.
    18h58 `cd` to go to home directory, better than `cd ~``
    19h22 done.

0907sun
    19h53 another small one :
    19h53 C-u in the shell to delete everything before the cursor, C-k to delete what's after the cursor
    20h00 seems that C-u deletes the whole command for me.

0908mon
    04h24 so C-u
    04h36 done. learnt that it does not behave the same way in bash and zsh
    18h15 another small one : word boundaries in searches
    18h45 done

0909tue
    18h02 podcasts i listen to
    18h28 ok, just listed them, it's already a long post. next : add links, and then commit/push

0910wed
    04h31 added links
    18h25 very small one : !! to repeat the previous shell command
    18h58 interesting, the bang commands... really learnt something today 
    18h58 now to see if I'll remember any of it.

0911thu
    18h47 real small one : `type myalias` to see what's behind an alias
    19h07 done.

0912fri
    17h48 a little piece on global variables in javascript
    18h06 done.

0913sat
    20h03 editing a Vim macro
    20h21 done.

0914sun
    20h33 lucky that i have a stock of ideas written down, otherwise it would
    20h33 be hard to find a small topic every day
    20h43 not much inspiration, let's say warnings in PHP
    20h44 no.
    20h46 so just nothing today.

20150314sat
    20h54 at the hotel after a day at the Wroc_love.rb conference
    20h54 let's write some before going to the party
    21h17 done.

20150325wed
    05h07 wrote a pomodoro last week on wroc_love.rb, try to do the same now,
    maybe finish my post

20150401wed
    05h43 still on the wroc_love.rb post

20150408wed
    06h08 still on the wroc_love.rb post, should finish, 'publish' today?
    06h47 let's push that
    06h59 done.

20150415wed
    17h26 wroc_love.rb videos are out, could add the links to my posts
    17h40 done.

20160110sun
    12h32 i'd like to try to write a blog post a week, maybe on sunday.
    12h32 oh, git add --edit, good idea.
    12h35 meant git commit --verbose
    12h50 ah, if added twice, also show the diff in the worktree (unstaged)
    13h02 done.

20160117sun
    17h01 an article on other ways to move on the Vim command line than the arrow keys
    17h21 did not know how to do it and felt the need, so good thing to learn.
    17h37 done.

20160124sun
    11h35 a short article about console.time() and console.timeEnd()
    11h36 used it yesterday
    11h51 done.

20160131sun
    17h01 no idea really, nothing in the list appeals to me right now.

20160312sat
    09h52 at the wroc_love.rb conference, write something about day one (yesterday)
    10h07 good thing i did now, i would have forgotten a lot.

20160313sun
    10h05 try and write something quickly about the second day before the third one starts
    10h25 done.

20160314mon
    05h50 write something about day three
    06h04 ok.

20160321mon
    06h38 recorded a screencast of my wroc_love.rb sonic pi kata, will write a short post about it and share it

20170301wed
    04h48 try a short blog post every day in march.
    05h06 today: git checkout -p
    05h13 done.

ideas : 

short post about f/fixup when git rebase -i (always used s/squash, but almost never need the second commit message => should really use fixup)
mini blog post $ git diff 95cbc39..master | vim -
  very short post about redirecting terminal output to `vim -`
todo blog on Array.from to then use forEach on return type of document.getElementsByClassName
  learnt about it here http://stackoverflow.com/questions/3871547/js-iterating-over-result-of-getelementsbyclassname-using-array-foreach
  => learn more about both
todo blog about `git rebase -i --root` because `git rebase -i commitsha^` does not work with the first commit
  rarely useful, but "needed it" today to avoid adding a useless "tidy" commit
  => learnt about it here : http://stackoverflow.com/questions/598672/squash-the-first-two-commits-in-git
todo blog (and use) : Ctrl-F when in vim command line mode opens a buffer so can edit it. then Ctrl-C (or :q?) brings back to the normal command line
  http://stackoverflow.com/questions/2075569/how-can-i-move-around-in-the-vim-command-line
todo blog about vim-repeat (et mon use case pour `,w`)
TODO blog : `@:` repeats the last command (always forget)
blog : did i write about % ? super useful when navigating json or c-style functions with braces, or parentheses. maybe already wrote, check => 20130913 on dirait
tmux rename current window : `<C-j> ,` (because remapped <C-a> to <C-j>)
blog about git add -N new_file git add -i (http://stackoverflow.com/questions/6436681/how-to-stage-only-part-of-a-new-file-with-git)
blog about DAS, say what i like about it.
:vimgrep ? for when do not have ack on a server, like windows for example. at least :cn and :cp. and **/*.md. C-o / C-i. close the search and go back to where i was before it ?
diff <(ls ../en/) <(ls ../fr/)
peer2peer tom stuart : git add --edit, vim-gitgutter, enumerator yielder
peer2peer camille baldock : interesting how uses red green but not much refactor. that is : says code is horrible, but leaves it that way. at first i thought she could make it better. but then do you need to? maybe not, if it's in a small method and it's tested and it works, don't really need to make it more elegant. may do that later when/if need to do it. advantage of doing that : you move on and get more features done. interesting. and as long as you have tests you can refactor that later whenever you want with a good dose of confidence that you won't break anything.
:help list<C-D> => shows possibilities, great
watched part of peertopeer ep. with tom stuart and reflected on video of andrew and brad writing and http2 client in go : felt so weird to see them coding for such a long time without tests, and just some manual tests once in a while, maybe a little automated test, but almost nothing. so used to see people write tests along with the code
:&& => repeat last substition. @: => repeat last command line command. and then @@, just like with macros
cat *mysql* > temp_mysql.sql
ls some/long/path cp !!:$/some_file !!:$/new_file_name
cp some/long/path/to/file Ctrl-W Ctrl-Y Ctrl-Y edit new file name
  => variant : ls machin, cp !!$/tab ctrl-W ctrl-Y space ctrl-Y edit
history + !141 to execute the command #141
Ctrl-R : use Ctrl-R again to find previous commands matching the string
:reg
blogging (even if no one reads you, just writing about stuff will make you research it a bit and learn something)
reading mailing lists
list() in php to 'destructure' array returned by function
php use warnings!
code review
command line shortcuts (alt dot, Ctrl-t, Ctrl-a, Ctrl-e, Ctrl-u, alt-b and alt-f to go back/forward by a word, Ctrl-r)
0 to go to the beginning of the line. ^ to go to the first non whitespace character of the line
mappings (for example add a space before and after the character under the cursor. or my ,j and ,k to do page-down page-up in the next split window)
Ctrl-I to go forward in the jump list (I remember Ctrl-O but never Ctrl-I)
:! to launch a system command / another program. Ex: !phpunit %, !phpcs %
differences between $a + $b and array_merge($a, $b) in php
:tabclose : moyen de voir ensuite le tab de gauche au lieu de celui de droite?
advantages of (loosely) limiting line width to 80 chars (diffs, more readable, forces to use variables (with intention revealing name)). drawbacks: more screen height used => but then pushes you to extract functions
:w filename.txt to save a visual selection to a file
try to change my ,t mapping to execute the last test file if the current one is not a test file
:Gread! show develop:%
blog post about how conferences are tiring but get so much momentum from them (want to learn more, and have fun, ideas of things to learn, plan that out, etc). 
blog post about meeting people at conferences, how by default you may think that listening to the talks is the most important, but even if they're nice or fun, i find i don't learn all that much from them (learn some things, that some thing exist and i could check them out, inspire), but great to meet people who do the same job more or less as i do, see their perspective, and then get to follow new people on twitter, etc. mention nice to meet people again at another conf, like this year at wrocloverb
blog post : not happy at all with my productivity. would like to learn to become a way better programmer (in the sense of getting things done faster)
write a blog post about 'no self promotion' (mention the idea that if you think your content is interesting you have a duty to get the word out or your doing people a disservice)
blog post(s) : dev frustrations when working on legacy software with a team.
  1. when planned to work on a feature and lots of bugs need fixing (and come up one after the other) (even if fixing the bugs is interesting, feel like didn't really managed to do your work)
    => talk about daily standup meeting, when say that did not manage to work (much if all) on what announced was going to work on the day before...
      => same thing with retrospective, things we added in the sprint backlog but didn't manage to do
  2. when planned to work on a feature and manage to take time for that but does not go as fast as would like it to (even if otherwise interesting/pleasurable work)
  3. on top of that would like to do code review. on a team, takes time if you want to code review everything, if when just skimming some commits. especially if you see things that does seems alright, takes time to give feedback, or take action. but think it's useful (to learn (about other ways to code, about how the app is coded, how it evolves), to teach (if you can suggest a better way to do things, or tell them if something's wrong), to have a better product in the end (if only to fix typos in function names before they are in production and possibly used by customer specific code and thus less easy to change))
  4. solution to that? carve out time for development of new features, for code review, for bug fixing? share the load with the team? become better at coding so less need to fix bugs? but how? :)
blog post(s) (or book?) about productivity. why i feel my productivity is so low as a developer. how having to fix bugs all the time (and it taking quite a lot of time) affects it.
